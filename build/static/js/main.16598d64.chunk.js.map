{"version":3,"sources":["RepoPreview/RepoPreview.js","HomePage/HomePage.js","RepoCard/RepoCard.js","App.js","serviceWorker.js","index.js"],"names":["RepoPreview","repositoryData","className","repository_theme_number","to","pathname","name","style","textDecoration","height","viewBox","version","width","aria-hidden","fillRule","d","stargazers_count","date","dd","getDate","mm","getMonth","yy","getFullYear","getHours","slice","getMinutes","formatDate","Date","updated_at","href","html_url","HomePage","useState","localStorage","getItem","JSON","parse","search_value","searchValue","setSearchValue","repositories","setRepositories","pagination","setPagination","pagesCount","setPagesCount","page_number","pageNumber","setPageNumber","firstPage","setFirstPage","lastPage","setLastPage","isMountRef","useRef","requestUrl","useEffect","trim","targetUrl","a","fetch","response","json","data","link","headers","get","items","map","el","Math","floor","random","createPaginator","searchRepos","searchTopRepos","current","updateData","pages","i","push","paginationTemp","split","forEach","url","replace","pagesCountTemp","match","dataToUpdate","setItem","stringify","fill","type","placeholder","onChange","event","target","value","length","repository","idx","key","onClick","numberOfPage","closest","textContent","handlerClickPaginator","paginationPage","RepoCard","props","repoLangs","setRepoLangs","contributors","setContributors","location","repository_data","getRepoLangs","languages_url","Object","keys","getContributors","contributors_url","description","src","owner","avatar_url","alt","login","repoLang","contributor","contributions","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4WAKaA,G,YAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAsBzB,OACA,yBAAKC,UAAS,gCArBW,CAAC,OAAO,cAAc,OAAO,SAAS,SAqBLD,EAAeE,wBAA0B,KAC/F,yBAAKD,UAAU,sBACX,kBAAC,IAAD,CAAME,GAAI,CACNC,SAAS,oBAAD,OAAqBJ,EAAeK,MAC5CL,eAAgBA,GAEhBM,MAAO,CAAEC,eAAgB,SACzB,uBAAGN,UAAU,qBAAsBD,EAAeK,QAG1D,yBAAKJ,UAAU,oBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,0BACX,yBAAKO,OAAO,KAAKP,UAAU,2BAA2BQ,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKC,cAAY,QAAO,0BAAMC,SAAS,UAAUC,EAAE,8cAErJ,uBAAGb,UAAU,0BAAb,UACA,uBAAGA,UAAU,2BAA2BD,EAAee,oBAG/D,yBAAKd,UAAU,sBACX,yBAAKA,UAAU,sBACX,uBAAGA,UAAU,2BAAb,gBAGA,uBAAGA,UAAU,2BA3CP,SAACe,GAEf,IAAIC,EAAKD,EAAKE,UACVD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKH,EAAKI,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKL,EAAKM,cAAgB,IAO9B,OANID,EAAK,KAAIA,EAAK,IAAMA,GAMjBJ,EAAK,IAAME,EAAK,IAAME,EAAK,KAJxB,IAAML,EAAKO,YAAYC,OAAO,GAIK,KAFjC,IAAMR,EAAKS,cAAcD,OAAO,GA+B/BE,CAAW,IAAIC,KAAK3B,EAAe4B,eAG5C,uBAAGC,KAAM7B,EAAe8B,SAAU7B,UAAU,oBACxC,yBAAKO,OAAO,KAAKP,UAAU,kCAAkCQ,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKC,cAAY,QAAO,0BAAMC,SAAS,UAAUC,EAAE,mkBCrD3JiB,EAAW,WAAO,IAAD,EACYC,mBAASC,aAAaC,QAAQ,oBAAsBC,KAAKC,MAAMH,aAAaC,QAAQ,qBAAqBG,aAAe,IADpI,mBACnBC,EADmB,KACNC,EADM,OAEcP,mBAAS,IAFvB,mBAEnBQ,EAFmB,KAELC,EAFK,OAGUT,mBAAS,IAHnB,mBAGnBU,EAHmB,KAGPC,EAHO,OAIUX,mBAAS,GAJnB,mBAInBY,EAJmB,KAIPC,EAJO,OAKSb,mBAASC,aAAaC,QAAQ,oBAAsBC,KAAKC,MAAMH,aAAaC,QAAQ,qBAAqBY,YAAc,GALhI,mBAKnBC,EALmB,KAKRC,EALQ,OAMOhB,oBAAS,GANhB,mBAMnBiB,EANmB,KAMTC,EANS,OAOKlB,oBAAS,GAPd,mBAOnBmB,EAPmB,KAOVC,EAPU,KAQpBC,EAAaC,kBAAO,GAEpBC,EAAU,uDAAmDjB,EAAnD,mDAAyGS,GAIzHS,qBAAU,WACFlB,EAAYmB,OAgBK,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEACOC,MAAMF,GADb,cACVG,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGVC,EAAOH,EAASI,QAAQC,IAAI,QAC5BlE,EAAiB+D,EAAKI,OAASJ,EAAKI,MAAMC,KAAI,SAAAC,GAChD,OAAO,2BACAA,GADP,IAEI,wBAA4BC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,OAGpE/B,EAAgBzC,GACbgE,EACCS,EAAgBT,IAEhBnB,EAAc,GACdF,EAAc,KAfF,4CAAH,qDAkBjB+B,CAAYnB,IAjCZhB,EAAe,IACK,uCAAG,gCAAAoB,EAAA,sEACIC,MAAM,oGADV,cACbC,EADa,gBAEAA,EAASC,OAFT,OAEbC,EAFa,OAGb/D,EAAiB+D,EAAKI,OAASJ,EAAKI,MAAMC,KAAI,SAAAC,GAChD,OAAO,2BACAA,GADP,IAEI,wBAA4BC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,OAGpE/B,EAAgBzC,GAChB2C,EAAc,IAVK,2CAAH,oDAYpBgC,IAuBDtB,EAAWuB,SACV5B,EAAc,GAGlB6B,MACF,CAACvC,IAEHkB,qBAAU,WACNH,EAAWuB,SAAU,IAEpB,IAELpB,qBAAU,YACW,uCAAG,WAAME,GAAN,mBAAAC,EAAA,sEACOC,MAAMF,GADb,cACVG,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGV/D,EAAiB+D,EAAKI,OAASJ,EAAKI,MAAMC,KAAI,SAAAC,GAChD,OAAO,2BACAA,GADP,IAEI,wBAA4BC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,OAGpE/B,EAAgBzC,GATA,2CAAH,sDAWjB0E,CAAYnB,GACZsB,MACF,CAAC9B,IAEHS,qBAAU,WACN,KAAGZ,EAAW,GAER,IAAIA,EAAW,EAAE,CAEnB,IADA,IAAIkC,EAAQ,GACJC,EAAE,EAAGA,GAAGnC,EAAWmC,IACvBD,EAAME,KAAKD,GAEfpC,EAAcmC,QAEd,GAAiB,MAAb/B,EACAJ,EAAc,CAAC,EAAE,EAAE,EAAE,EAAE,UAEtB,GAAGI,EAAW,EAAE,CAEjB,IADA,IAAMkC,EAAiB,GACfF,EAAE,EAAEA,EAAE,EAAEA,IACZE,EAAeD,KAAKjC,EAAW,EAAEgC,GAErCpC,EAAcsC,QAEdtC,EAAc,CAAC,EAAE,EAAE,EAAE,EAAE,MAGjC,CAACC,IAEHY,qBAAU,WACW,KAAbT,EACAG,GAAa,GACM,MAAbH,GACNG,GAAa,GACbE,GAAY,KAEZF,GAAa,GACbE,GAAY,MAElB,CAACL,IAGH,IAAM0B,EAAkB,SAACT,GACNA,EAAKkB,MAAM,KACpBC,SAAQ,SAAAnB,GACV,IAAOoB,EAAOpB,EAAKkB,MAAM,KAAK,GAAGG,QAAQ,IAAI,IAAIA,QAAQ,IAAI,IAE7D,GAAW,SADIrB,EAAKkB,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGG,QAAjC,IAA6C,IAAIA,QAAjD,IAA6D,IAC1D,CACd,IAAMC,EAAiBF,EAAIG,MAAM,kBAAkB,GAE/C1C,EADDyC,EAAe,GACA,GAEAA,QA8BxBT,EAAa,WACf,IAAMd,EAAO5B,KAAKC,MAAMH,aAAaC,QAAQ,qBACvCsD,EAAY,2BACXzB,GADW,IAEd1B,aAAcC,EACdQ,YAAaC,IAEjBd,aAAawD,QAAQ,mBAAmBtD,KAAKuD,UAAUF,KAG3D,OACI,oCACA,4BAAQvF,UAAU,UACd,4BAAI,yBAAKO,OAAO,KAAKC,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKC,cAAY,QAAO,0BAAMC,SAAS,UAAUC,EAAE,2jBAA2jB6E,KAAK,aAAhrB,sBAEJ,6BAAS1F,UAAU,UACf,yBAAKA,UAAU,mCACX,2BACIA,UAAU,qBACV2F,KAAK,OACLC,YAAY,0BACZC,SAAU,SAACC,GAAD,OAASxD,EAAewD,EAAMC,OAAOC,QAC/CA,MAAS3D,KAIjB,yBAAKrC,UAAU,mBACVuC,GAAgBA,EAAa0D,OAAO,EAAI1D,EAAa4B,KAAI,SAAC+B,EAAWC,GAClE,OAAO,kBAAC,EAAD,CAAaC,IAAKD,EAAKpG,eAAgBmG,OAGlD,uBAAGlG,UAAU,sBAAb,kBACoBqC,IAIvBI,GAAcA,EAAWwD,OAAO,GAC7B,yBAAKjG,UAAU,sCAAsCqG,QAAS,SAACP,GAAD,OA7D5C,SAACA,GAC3B,IAAIQ,GAAgBxD,EACjBgD,EAAMC,OAAOQ,QAAQ,2BAA2C,KAAbzD,GAClDwD,GAAc,GACVxD,KAAgBL,EAAW,IAC3BC,EAAcD,EAAW0B,KAAI,SAAAC,GAAE,OAAEA,EAAI,OAEpC0B,EAAMC,OAAOQ,QAAQ,4BAA6BzD,GAAcH,IAAeG,EAAW,IAC/FwD,GAAc,GACVxD,KAAgBL,EAAWA,EAAWwD,OAAO,IAC7CvD,EAAcD,EAAW0B,KAAI,SAAAC,GAAE,OAAEA,EAAI,OAEpC0B,EAAMC,OAAOQ,QAAQ,wBAC1BD,EAAgBR,EAAMC,OAAOS,gBACP/D,EAAWA,EAAWwD,OAAO,KAAOK,GAAe3D,IAAe2D,EAAa,GACjG5D,EAAcD,EAAW0B,KAAI,SAAAC,GAAE,OAAEA,EAAI,OAC/BkC,KAAkB7D,EAAW,IAAsB,KAAf6D,GAC1C5D,EAAcD,EAAW0B,KAAI,SAAAC,GAAE,OAAEA,EAAI,OAI7CrB,EAAcuD,GAwCiEG,CAAsBX,KACzF,yBAAK9F,UAAS,gCAA2BgD,EAAU,iCAAiC,KAChF,iCAEJ,yBAAKhD,UAAU,oBACdyC,EAAW0B,KAAI,SAACuC,EAAeP,GAC5B,OACI,uBAAGC,IAAKD,EAAKnG,UAAS,0BAAqB0G,KAAoB5D,EAAa,2BAA6B,KACpG4D,OAKb,yBAAK1G,UAAS,gCAA2BkD,EAAS,iCAAiC,KAC/E,qCClNXyD,G,MAAW,SAACC,GAAW,IAAD,EACE7E,mBAAS,IADX,mBACxB8E,EADwB,KACdC,EADc,OAEQ/E,mBAAS,IAFjB,mBAExBgF,EAFwB,KAEXC,EAFW,KAGzBjH,EAAiB6G,EAAMK,SAASlH,eAAiB6G,EAAMK,SAASlH,eAAiBmC,KAAKC,MAAMH,aAAaC,QAAQ,qBAAqBiF,gBAmBtIC,EAAY,uCAAG,8BAAAzD,EAAA,sEACMC,MAAM5D,EAAeqH,eAD3B,cACXxD,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBgD,EAAaO,OAAOC,KAAKxD,IAHR,2CAAH,qDAMZyD,EAAe,uCAAE,8BAAA7D,EAAA,sEACIC,MAAM5D,EAAeyH,kBADzB,cACb5D,EADa,gBAEAA,EAASC,OAFT,OAEbC,EAFa,OAGnBkD,EAAiBlD,EAAKvC,MAAM,EAAE,KAHX,2CAAF,qDAqBrB,OANAgC,qBAAU,WACN4D,IACAI,IAXe,WACf,IAAMzD,EAAO5B,KAAKC,MAAMH,aAAaC,QAAQ,qBACvCsD,EAAY,2BACXzB,GADW,IAEdoD,gBAAiBnH,IAErBiC,aAAawD,QAAQ,mBAAmBtD,KAAKuD,UAAUF,IAMvDX,KACF,IAGE,oCACE7E,EACE,yBAAKC,UAAS,qCAhDG,CAAC,OAAO,cAAc,OAAO,SAAS,SAgDQD,EAAeE,wBAA0B,KACpG,yBAAKD,UAAU,8BACX,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,0BACRD,EAAeK,MAEpB,yBAAKJ,UAAU,0BACX,yBAAKA,UAAU,+BACX,yBAAKO,OAAO,KAAKP,UAAU,gCAAgCQ,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKC,cAAY,QAAO,0BAAMC,SAAS,UAAUC,EAAE,8cAE1J,uBAAGb,UAAU,+BAAb,UACA,uBAAGA,UAAU,gCAAgCD,EAAee,mBAEhE,yBAAKd,UAAU,2BACX,uBAAGA,UAAU,gCAAb,gBAGA,uBAAGA,UAAU,gCAhEnB,SAACe,GACf,IAAIC,EAAKD,EAAKE,UACVD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKH,EAAKI,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKL,EAAKM,cAAgB,IAO9B,OANID,EAAK,KAAIA,EAAK,IAAMA,GAMjBJ,EAAK,IAAME,EAAK,IAAME,EAAK,KAJxB,IAAML,EAAKO,YAAYC,OAAO,GAIK,KAFjC,IAAMR,EAAKS,cAAcD,OAAO,GAqDnBE,CAAW,IAAIC,KAAK3B,EAAe4B,gBAIhD,yBAAK3B,UAAU,yBACX,yBAAKA,UAAU,gCACX,uBAAGA,UAAU,qCACRD,EAAe0H,cAGxB,yBAAKzH,UAAU,0BACX,uBAAGA,UAAU,gCAAb,UAGA,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,sCACX,yBAAK0H,IAAK3H,EAAe4H,MAAMC,WAAYC,IAAI,GAAG7H,UAAU,gCAEhE,uBAAG4B,KAAM7B,EAAe4H,MAAM9F,SAAU7B,UAAU,mCAC7CD,EAAe4H,MAAMG,SAIjCjB,GACG,yBAAK7G,UAAU,0BACX,uBAAGA,UAAU,gCAAb,+BAGA,yBAAKA,UAAU,+BACV6G,EAAU1C,KAAI,SAAC4D,EAAS5B,GACrB,OAAO,yBAAKC,IAAKD,EAAKnG,UAAU,oCAAoC+H,UAO5F,yBAAK/H,UAAU,0BACX,yBAAKA,UAAU,iCACX,uBAAGA,UAAU,uCAAb,6BAGA,yBAAKA,UAAU,sCACV+G,GAAcA,EAAa5C,KAAI,SAAC6D,EAAY7B,GACzC,OACI,yBAAKC,IAAKD,EAAKnG,UAAU,mEACrB,yBAAKA,UAAU,4CACX,yBAAK0H,IAAKM,EAAYJ,WAAYC,IAAI,GAAG7H,UAAU,sCAEvD,yBAAKA,UAAU,qCACX,uBAAG4B,KAAMoG,EAAYnG,SAAU7B,UAAU,yCAAyCgI,EAAYF,OAC9F,uBAAG9H,UAAU,mDAAb,kBACmB,0BAAMA,UAAU,qDAAqDgI,EAAYC,yBAWpI,qJCtHGC,MAbf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlI,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmI,KAAM,IAAKC,OAAK,EAACC,UAAWvG,IACnC,kBAAC,IAAD,CAAOqG,KAAM,yBAA0BC,OAAK,EAACC,UAAW1B,QCC9C2B,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASlD,MACvB,2DCXNmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.16598d64.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './RepoPreview.css'\n\n\nexport const RepoPreview = ({repositoryData}) => {\n\n    const repositoryThemes = ['pink','light-green','blue','orange','purpl']\n\n    const formatDate= (date) => {\n\n        let dd = date.getDate();\n        if (dd < 10) dd = '0' + dd;\n      \n        let mm = date.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n      \n        let yy = date.getFullYear() % 100;\n        if (yy < 10) yy = '0' + yy;\n\n        let hh = (\"0\" + date.getHours()).slice(-2)\n\n        let mins = (\"0\" + date.getMinutes()).slice(-2)\n\n        return dd + '.' + mm + '.' + yy + \" \" + hh + \":\" + mins;\n      }\n\n    return(\n    <div className={`repository repository_${repositoryThemes[repositoryData.repository_theme_number - 1]}`}>\n        <div className=\"repository__header\">\n            <Link to={{\n                pathname:`/repository-card/${repositoryData.name}`,\n                repositoryData: repositoryData,\n                }}\n                style={{ textDecoration: 'none' }}>\n                <p className=\"repository__title\" >{repositoryData.name}</p>\n            </Link>\n        </div>\n        <div className=\"repository__main\">\n            <div className=\"repository__stars\">\n                <div className=\"repository__stars-icon\">\n                    <svg height=\"16\" className=\"repository__octicon-star\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z\"></path></svg>\n                </div>\n                <p className=\"repository__stars-text\">Stars:</p>\n                <p className=\"repository__stars-count\">{repositoryData.stargazers_count}</p>\n            </div>\n        </div>\n        <div className=\"repository__footer\">\n            <div className=\"repository__commit\">\n                <p className=\"repository__commit-text\">\n                    Last commit: \n                </p>\n                <p className=\"repository__commit-date\">\n                    {formatDate(new Date(repositoryData.updated_at))}\n                </p>\n            </div>\n            <a href={repositoryData.html_url} className=\"repository__link\">\n                <svg height=\"24\" className=\"repository__octicon-mark-github\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            </a>\n        </div>\n    </div>\n    )\n}\n\n\n","import React, {useState,useEffect,useRef} from 'react';\nimport './HomePage.css'\nimport {RepoPreview} from '../RepoPreview/RepoPreview'\n\nexport const HomePage = () => {\n    const [searchValue, setSearchValue] = useState(localStorage.getItem(\"github_dashboard\") ? JSON.parse(localStorage.getItem(\"github_dashboard\")).search_value : \"\")\n    const [repositories, setRepositories] = useState([])\n    const [pagination, setPagination] = useState([])\n    const [pagesCount, setPagesCount] = useState(1)\n    const [pageNumber,setPageNumber] = useState(localStorage.getItem(\"github_dashboard\") ? JSON.parse(localStorage.getItem(\"github_dashboard\")).page_number : 1)\n    const [firstPage,setFirstPage] = useState(true)\n    const [lastPage,setLastPage] = useState(false)\n    const isMountRef = useRef(false);\n \n    const requestUrl = `https://api.github.com/search/repositories?q=${searchValue}&sort=stars&order=desc&per_page=10&page=${pageNumber}`\n\n   \n\n    useEffect(()=>{\n        if(!searchValue.trim()){\n            setSearchValue('')\n            const searchTopRepos = async()=>{\n                const response = await fetch(`https://api.github.com/search/repositories?q=stars:%3E1&sort=stars&order=desc&per_page=10&page=1`)\n                const data = await response.json();\n                const repositoryData = data.items && data.items.map(el=>{\n                    return {\n                        ...el,\n                        'repository_theme_number' : Math.floor(Math.random() * 5) + 1\n                    }\n                })\n                setRepositories(repositoryData)\n                setPagination([])\n            }\n            searchTopRepos()\n        }else{\n            const searchRepos = async(targetUrl)=>{\n                const response = await fetch(targetUrl)\n                const data = await response.json();\n                const link = response.headers.get(\"link\")\n                const repositoryData = data.items && data.items.map(el=>{\n                    return {\n                        ...el,\n                        'repository_theme_number' : Math.floor(Math.random() * 5) + 1\n                    }\n                })\n                setRepositories(repositoryData)\n                if(link){\n                    createPaginator(link)\n                } else{\n                    setPagesCount(0)\n                    setPagination([]) \n                }\n            }\n            searchRepos(requestUrl)\n        }\n        \n        if(isMountRef.current){\n            setPageNumber(1)\n        }\n\n        updateData();\n    },[searchValue])\n\n    useEffect(() => {\n        isMountRef.current = true;\n        return \n      }, []);\n\n    useEffect(()=>{\n        const searchRepos = async(targetUrl)=>{\n            const response = await fetch(targetUrl)\n            const data = await response.json();\n            const repositoryData = data.items && data.items.map(el=>{\n                return {\n                    ...el,\n                    'repository_theme_number' : Math.floor(Math.random() * 5) + 1\n                }\n            })\n            setRepositories(repositoryData)\n        }\n        searchRepos(requestUrl)\n        updateData();\n    },[pageNumber])\n\n    useEffect(()=>{\n        if(pagesCount<1){\n            return;\n        }else if(+pagesCount<5){\n            let pages = []\n            for(let i=1; i<=pagesCount;i++){\n                pages.push(i)\n            }\n            setPagination(pages)\n        }else{\n            if(+pageNumber===10){\n                setPagination([6,7,8,9,10])\n            }\n            else if(pageNumber>4){\n                const paginationTemp = [];\n                for(let i=0;i<5;i++){\n                    paginationTemp.push(pageNumber-3+i)\n                }\n                setPagination(paginationTemp)\n            }else{\n                setPagination([1,2,3,4,5])\n            }  \n        }\n    },[pagesCount])\n\n    useEffect(()=>{\n        if(+pageNumber===1){\n            setFirstPage(true)\n        }else if(+pageNumber===10){\n            setFirstPage(false)\n            setLastPage(true)\n        }else{\n            setFirstPage(false)\n            setLastPage(false)\n        }\n    },[pageNumber])\n\n\n    const createPaginator = (link) =>{\n        const links =  link.split(\",\")\n        links.forEach(link=>{\n            const  url =  link.split(\";\")[0].replace(\"<\",\"\").replace(\">\",\"\")\n            const  title = link.split(\";\")[1].split(\"=\")[1].replace(`\"`,\"\").replace(`\"`,\"\")\n            if(title===\"last\"){\n                const pagesCountTemp = url.match(/&page=(\\d+).*$/)[1]\n                if(pagesCountTemp>10){\n                    setPagesCount(10)\n                }else{\n                    setPagesCount(pagesCountTemp)\n                }\n            }\n        }) \n    }\n\n    const handlerClickPaginator = (event) => {\n        let numberOfPage = +pageNumber;\n        if(event.target.closest('.paginator__arrow-prev') && +pageNumber!==1){\n            numberOfPage-=1;\n            if(+pageNumber === +pagination[0]){ \n                setPagination(pagination.map(el=>el-=1))\n            }\n        }else if(event.target.closest('.paginator__arrow-next')&& +pageNumber < +pagesCount && +pageNumber<10){\n            numberOfPage+=1;\n            if(+pageNumber === +pagination[pagination.length-1]){\n                setPagination(pagination.map(el=>el+=1))\n            }\n        }else if(event.target.closest('.paginator__item')){\n            numberOfPage  = event.target.textContent;\n            if(+numberOfPage === +pagination[pagination.length-1] && +numberOfPage< +pagesCount && +numberOfPage<10){\n                setPagination(pagination.map(el=>el+=1))\n            }else if(+numberOfPage === +pagination[0] && +numberOfPage!==1){\n                setPagination(pagination.map(el=>el-=1))\n            }\n        }\n\n        setPageNumber(numberOfPage)\n    }\n\n    const updateData = () => {\n        const data = JSON.parse(localStorage.getItem(\"github_dashboard\"))\n        const dataToUpdate = { \n            ...data,\n            search_value: searchValue,\n            page_number: pageNumber,\n        }\n        localStorage.setItem(\"github_dashboard\",JSON.stringify(dataToUpdate))\n    }\n\n    return(\n        <>\n        <header className=\"header\">\n            <h1><svg height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\" fill=\"#000000\"></path></svg> Github Dashboard</h1>\n        </header>\n        <section className=\"search\">\n            <div className=\"search__search-line search-line\">\n                <input \n                    className=\"search-line__input\" \n                    type=\"text\"\n                    placeholder=\"Type repository name...\"\n                    onChange={(event)=>setSearchValue(event.target.value)}\n                    value = {searchValue}\n                />\n            </div>\n\n            <div className=\"search__results\">\n                {repositories && repositories.length>1 ? repositories.map((repository,idx)=>{\n                    return <RepoPreview key={idx} repositoryData={repository}/>\n                })\n                :\n                <p className=\"search__no-results\">\n                    No results for {searchValue}\n                </p>\n                }\n            </div>\n            {pagination && pagination.length>1 &&\n                <div className=\"search__results-paginator paginator\" onClick={(event)=>handlerClickPaginator(event)}>\n                    <div className={`paginator__arrow-prev ${firstPage?\"paginator__arrow-prev_disabled\":\"\"}`}>\n                        <p>&lt;</p>\n                    </div>\n                    <div className=\"paginator__items\">\n                    {pagination.map((paginationPage,idx)=>{\n                        return (\n                            <p key={idx} className={`paginator__item${+paginationPage === +pageNumber ? \" pagination__item_active\" : \"\"}`}>\n                                {paginationPage}\n                            </p>\n                        )\n                    })}\n                    </div>\n                    <div className={`paginator__arrow-next ${lastPage?\"paginator__arrow-next_disabled\":\"\"}`}>\n                        <p>></p>\n                    </div>\n                </div>\n            }\n        </section>\n        </>\n    )\n}\n\n\n","import React, {useState,useEffect} from 'react';\nimport './RepoCard.css'\n\nexport const RepoCard = (props) => {\n    const [repoLangs,setRepoLangs] = useState([])\n    const [contributors,setContributors] = useState([])\n    const repositoryData = props.location.repositoryData ? props.location.repositoryData : JSON.parse(localStorage.getItem(\"github_dashboard\")).repository_data\n    const repositoryThemes = ['pink','light-green','blue','orange','purpl']\n    const formatDate= (date) => {\n        let dd = date.getDate();\n        if (dd < 10) dd = '0' + dd;\n        \n        let mm = date.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n        \n        let yy = date.getFullYear() % 100;\n        if (yy < 10) yy = '0' + yy;\n\n        let hh = (\"0\" + date.getHours()).slice(-2)\n\n        let mins = (\"0\" + date.getMinutes()).slice(-2)\n\n        return dd + '.' + mm + '.' + yy + \" \" + hh + \":\" + mins;\n    }\n\n    const getRepoLangs = async()=>{\n        const response = await fetch(repositoryData.languages_url)\n        const data = await response.json();\n        setRepoLangs(Object.keys(data))\n    }\n    \n    const getContributors= async()=>{\n        const response = await fetch(repositoryData.contributors_url)\n        const data = await response.json();\n        setContributors((data.slice(0,10)))\n    }\n\n    const updateData = () => {\n        const data = JSON.parse(localStorage.getItem(\"github_dashboard\"))\n        const dataToUpdate = { \n            ...data,\n            repository_data: repositoryData,\n        }\n        localStorage.setItem(\"github_dashboard\",JSON.stringify(dataToUpdate))\n    }\n\n    useEffect(()=>{ \n        getRepoLangs();\n        getContributors();\n        updateData();\n    },[])\n\n    return(\n        <>\n        { repositoryData?\n            <div className={`repository-card repository_${repositoryThemes[repositoryData.repository_theme_number - 1]}`}>\n                <div className=\"repository-card__left-side\">\n                    <div className=\"repository-card__header\">\n                        <p className=\"repository-card__title\">\n                            {repositoryData.name}\n                        </p>\n                        <div className=\"repository-card__stars\">\n                            <div className=\"repository-card__stars-icon\">\n                                <svg height=\"16\" className=\"repository-card__octicon-star\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z\"></path></svg>\n                            </div>\n                            <p className=\"repository-card__stars-text\">Stars:</p>\n                            <p className=\"repository-card__stars-count\">{repositoryData.stargazers_count}</p>\n                        </div>\n                        <div className=\"repository-card__commit\">\n                            <p className=\"repository-card__commit-text\">\n                                Last commit: \n                            </p>\n                            <p className=\"repository-card__commit-date\">\n                                {formatDate(new Date(repositoryData.updated_at))}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"repository-card__main\">\n                        <div className=\"repository-card__description\">\n                            <p className=\"repository-card__description-text\">\n                                {repositoryData.description}\n                            </p>\n                        </div>\n                        <div className=\"repository-card__owner\">\n                            <p className=\"repository-card__owner-title\">\n                                Owner:\n                            </p>\n                            <div className=\"repository-card__owner-main\">\n                                <div className=\"repository-card__owner-img-wrapper\">\n                                    <img src={repositoryData.owner.avatar_url} alt=\"\" className=\"repository-card__owner-img\"/>\n                                </div>\n                                <a href={repositoryData.owner.html_url} className=\"repository-card__owner-nickname\">\n                                    {repositoryData.owner.login}\n                                </a>\n                            </div>\n                        </div>\n                        {repoLangs&& \n                            <div className=\"repository-card__langs\">\n                                <p className=\"repository-card__langs-title\">\n                                    Languages ​​used:\n                                </p>\n                                <div className=\"repository-card__langs-list\">\n                                    {repoLangs.map((repoLang,idx)=>{\n                                        return <div key={idx} className=\"repository-card__langs-list-item\">{repoLang}</div>\n                                    })}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <div className=\"repository__right-side\">\n                    <div className=\"repository-card__contributors\">\n                        <p className=\"repository-card__contributors-title\">\n                            Most active contributors:\n                        </p>\n                        <div className=\"repository-card__contributors-main\">\n                            {contributors&&contributors.map((contributor,idx)=>{\n                                return (\n                                    <div key={idx} className=\"repository-card__contributors-item repository-card__contributor\">\n                                        <div className=\"repository-card__contributor-img-wrapper\">\n                                            <img src={contributor.avatar_url} alt=\"\" className=\"repository-card__contributor-img\"/>\n                                        </div>\n                                        <div className=\"repository-card__contributor-info\">\n                                            <a href={contributor.html_url} className=\"repository-card__contributor-nickname\">{contributor.login}</a>\n                                            <p className=\"repository-card__contributor-contributions-text\">\n                                                Contributions: <span className=\"repository-card__contributor-contributions-amount\">{contributor.contributions}</span> \n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            :\n            <h1>Упс, что-то пошло не так</h1>\n        }\n        </>\n    )\n}\n\n\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {HomePage} from './HomePage/HomePage.js'\nimport {RepoCard} from './RepoCard/RepoCard.js'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path={'/'} exact component={HomePage}/>\n          <Route path={'/repository-card/:name'} exact component={RepoCard}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}